# This sets the container image more information can be found here: https://kubernetes.io/docs/concepts/containers/images/
image:
  repository: linuxserver/wireguard
  # This sets the pull policy for images.
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "1.0.20250521-r0-ls89"
  # digest of the image
  digest: "sha256:d4cd526f313701d3e3fde732743b8fccbb00ddcb1c6b6043bab6b9bf14b76686"

# This is for the secrets for pulling an image from a private repository more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
imagePullSecrets: []
# This is to override the chart name.
nameOverride: ""
fullnameOverride: ""

# This will set the replicaset count more information can be found here: https://kubernetes.io/docs/concepts/workloads/controllers/replicaset/
replicaCount: 1

# DNS policy and configuration of the pod
# E.g.
# dnsPolicy: None
# dnsConfig:
#   searchers:
#     - svc.cluster.local
#     - cluster.local
#   nameservers:
#     - 1.1.1.1
#     - 8.8.8.8

# dnsPolicy: ClusterFirst
# dnsConfig: {}

# Expose the service on the host network
# hostNetwork: true

# deployment strategy type
# NOTE: Set it to `Recreate` if you use a PersistentVolume that cannot be mounted on multiple pods
# E.g.
# updateStrategy:
#   rollingUpdate:
#     maxSurge: 25%
#     maxUnavailable: 25%
#   type: RollingUpdate
updateStrategy:
  type: RollingUpdate

# Init containers
# initContainers:
#   - name: do-something
#     image: busybox
#     command: ['do', 'something']
initContainers: []

# Sidecar containers
# E.g.
#  sidecars:
#   - name: container-name
#     image: image-name
#     imagePullPolicy: Always
sidecars: []

# Wireguard specific configuration
# wireguard client and server will always use the wg0 interface
wireguard:
  # these options are used in server or client mode

  # optional timezone to use, see this list: https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List Default is "Etc/UTC"
  timezone: ""

  # optional DNS server set in peer/client configs (can be set as 8.8.8.8)
  # for server default is "auto" (uses host's DNS via included CoreDNS forward)
  # for client default is "1.1.1.1, 2606:4700:4700::1111"
  # dns: "1.1.1.1"

  # The IPs/Ranges for Client/Server. Defines what IPs/Ranges will be able to reach using the VPN connection.
  # If not specified the default value is: '0.0.0.0/0, ::0/0' This will cause ALL traffic to route through the VPN, if you want split tunneling, set this to only the IPs you would like to use the tunnel AND the ip of the server's WG ip, such as 10.13.13.1.
  # allowedIPs: "0.0.0.0/0, ::0/0"

  # see for more information https://github.com/linuxserver/docker-wireguard?tab=readme-ov-file#user--group-identifiers
  # UserID, default 1000
  PUID: "1000"
  # GroupID, default 1000
  PGID: "1000"

  # extra environment variables to set in the wireguard container
  # E.g.
  # extraEnvVars:
  # - name: MY_ENV_VAR
  #   value: my-value
  extraEnvVars: []

  # Name of the existing Secret containing extra env vars for wireguard container
  extraEnvVarsSecret: ""

  # Name of the existing ConfigMap containing extra env vars for wireguard container
  extraEnvVarsCM: ""

  # Use existing secret for the wireguard configuration. The secret has to contain the stringData wg0.conf
  # This must contain the FULL wireguard configuration file (in client or server mode)
  # NOTE: When it's set the wireguard.server.config or wireguard.client.config are ignored
  existingSecret: ""

  # server mode
  server:
    # This enables the WireGuard server mode, cannot be enabled at the same time as wireguard.client.enabled
    enabled: false

    # persistent volume claim for wireguard configuration
    storage:
      # Name of an existing PVC to use
      existingClaim: ""
      # storageClass is required when using a new PVC
      storageClass: ""
      # size is required when using a new PVC
      size: 250Mi
      # accessModes is required when using a new PVC
      accessModes:
        - ReadWriteOnce
      # annotations to add to the PVC
      annotations: {}
      # labels to add to the PVC
      labels: {}
      # selector to add to the PVC
      selector: {}
      # resource policy of the PVC
      resourcePolicy: keep

    # Use this to set values of the wireguard configuration instead of existingSecret
    config:
      # External IP or domain name. If set to auto, the container will try to determine and set the external IP automatically (for a static IP address)
      # This address will be used by the WireGuard clients to connect to the server
      address: vpn.example.com

      # Number of peers to create confs for. Required for server mode. Can also be a list of names: myPC,myPhone,myTablet (alphanumeric only). Default is 1
      peers: "1"

      # Internal subnet for the wireguard and server and peers (only change if it clashes). default 10.13.13.0/24
      # subnet: "10.13.13.0/24"

      # set to all or a list of comma separated peers (ie. 1,4,laptop) for the wireguard server to send keepalive packets to listed peers every 25 seconds.
      # Useful if server is accessed via domain name and has dynamic IP. Default = "all"
      # keepalivePeers = "1"

      # Generated QR codes will be displayed in the log. Set to false to skip log output. Default is false
      # peerQR: false

  # client mode
  client:
    # This enables the WireGuard client mode, cannot be enabled at the same time as wireguard.server.enabled
    enabled: false

    config:
      # This secret must used for the complete client configuation. Use this information from your peer configuration of the wireguard server
      # The secret has to contain the keys "privatekey", "publickey", "presharedkey"
      existingSecret: ""

      # IP Address to assign to the WireGuard peer
      address: "10.13.13.2/24"

      # Defines hooks for the WireGuard client, default is empty
      # preUp = ""
      # postUp = ""
      # preDown = ""
      # postDown = ""

      # MTU. Default is 1420
      # mtu: 1420

      # Persistent keepalive in seconds, 0 to disable, default is 25
      # persistentKeepalive: 25

      # Endpoint ip or hostname with port of the WireGuard server
      endpoint: "vpn.example.com:51820"

# This section builds out the service account more information can be found here: https://kubernetes.io/docs/concepts/security/service-accounts/
serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# This is for setting Kubernetes Annotations to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
podAnnotations: {}
# This is for setting Kubernetes Labels to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
podLabels: {}

podSecurityContext: {}
# default is:
# runAsUser: 1000
# runAsGroup: 1000
# fsGroup: 1000

# Container Security Context
securityContext: {}
# default is:
# capabilities:
#   add:
#     - NET_ADMIN
#   drop:
#     - ALL
# privileged: true
# allowPrivilegeEscalation: true
# readOnlyRootFilesystem: false
# runAsNonRoot: false
# runAsUser: 0

# used for server mode
# This is for setting up a service more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/
service:
  # This sets the service type more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types
  type: NodePort
  # This sets the ports more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#field-spec-ports
  port: 51820
  # This sets the NodePort
  nodePort: 31822
  # External IPs to bind the LoadBalancer service to (if using LoadBalancer type)
  externalIPs: []

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 500m
  #   memory: 256Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

# This is to setup the startup, liveness and readiness probes more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/
livenessProbe:
  enabled: true
  initialDelaySeconds: 5
  periodSeconds: 10
  timeoutSeconds: 1
  failureThreshold: 3
  successThreshold: 1

readinessProbe:
  enabled: true
  initialDelaySeconds: 5
  periodSeconds: 10
  timeoutSeconds: 1
  failureThreshold: 3
  successThreshold: 1

startupProbe:
  enabled: true
  initialDelaySeconds: 15
  periodSeconds: 10
  timeoutSeconds: 1
  failureThreshold: 10
  successThreshold: 1

# override default livness probe for wireguard
customLivenessProbe: {}

# override default readiness probe for wireguard
customReadinessProbe: {}

# override default startup probe for wireguard
customStartupProbe: {}

# This section is for setting up autoscaling more information can be found here: https://kubernetes.io/docs/concepts/workloads/autoscaling/
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
extraVolumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
extraVolumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}
